Aqui será inserido as informações (na ordem em que foram executadas) pertinentes ao desenvolvimento da aplicação, para
que o rastreamento do que foi feito fique mais fácil de ser feito.

Info 1
Na seção 5 - aula 49 foi disponibilizado um arquivo para baixar, onde o mesmo foi renomeado como "template" e uma das
pastas dentro de template (__MACOSX) foi deletada. Dentro da pasta "fusion-opl" foi recortado a pasta "assets" e o
arquivo "index.html" para serem colados dentro de "template". Após colagem, foi deletado a pasta "fusion-opl". Dentro
de "assets" foi deletado a pasta "php". O restante das pastas foram recortadas e coladas em "template". Após colagem,
foi excluído a pasta "assets". Agora, "template" é recortado e colado dentro da pasta do projeto criada pelo próprio
pycharm (fusion).

Info 2
Em settings DATABASES, name, user e password devem ser os mesmos cadastrados no pgAdmin do postgre para que seja
possível fazermos o acesso ao mesmo.

Info 3
Na pasta na pasta template (dentro da pasta do projeto fusion: fusion -> template), foram copiados as pastas:
css, fonts, img, js e scss e todas elas foram coladas em static dentro de core (fusion -> core -> static).

Info 4
Foi instalado o dj-database-url. Através dele o Heroku passa as informações do nosso host para que possamos utilizar
o banco de dados

Info 5
No commit C042... para rodar o coverage, digita-se no terminal: "coverage run manage.py test" e para o coverage nos
fornecer um relatório do que foi feito, digita-se: "coverage report". Ainda nesse mesmo commit, foi adicionada mais
uma excessão no gitignore "htmlcov/*" e no terminal foi digitado coverage html, gerando automaticamente um novo
diretório de nome htmlcov. Vale ressaltar que só foi possível gerar esse diretório após excutarmos os dois primeiros
códigos citados no início desse comentário. O diretório criado (htmlcov) nada mais é que um relatório de testes em html.
Dentro desse diretório usando "cd htmlcov" para acessá-lo, digitamos "python -m http.server onde para o instrutor do
curso, gerou-se um link que foi possível clicar... mas no meu não. Contudo, podemos acessar o relatório gerado através
de http://127.0.0.1:8000 onde lá podemos clicar em cada teste e ver o que ainda falta ser testado.